CREATE TABLE IF NOT EXISTS "servers" (server_name TEXT PRIMARY KEY, host TEXT NOT NULL DEFAULT '127.0.0.1', port INTEGER NOT NULL, chat_channel INTEGER, status_channel INTEGER, admin_channel INTEGER, players_embed INTEGER, mission_embed INTEGER);
CREATE TABLE IF NOT EXISTS "players" (ucid TEXT PRIMARY KEY, discord_id INTEGER, ban INTEGER DEFAULT 0);
CREATE TABLE IF NOT EXISTS "missions" (id INTEGER PRIMARY KEY AUTOINCREMENT, server_name TEXT NOT NULL, mission_name TEXT NOT NULL, mission_theatre TEXT NOT NULL, mission_start TEXT DEFAULT (datetime('now')), mission_end TEXT, FOREIGN KEY (server_name) REFERENCES servers(server_name) ON DELETE CASCADE);
CREATE TABLE IF NOT EXISTS "statistics" (mission_id INTEGER NOT NULL, player_ucid INTEGER NOT NULL, slot TEXT NOT NULL, kills INTEGER DEFAULT 0, pvp INTEGER DEFAULT 0, deaths INTEGER DEFAULT 0, ejections INTEGER DEFAULT 0, crashes INTEGER DEFAULT 0, teamkills INTEGER DEFAULT 0, kills_planes INTEGER DEFAULT 0, kills_helicopters INTEGER DEFAULT 0, kills_ships INTEGER DEFAULT 0, kills_sams INTEGER DEFAULT 0, kills_ground INTEGER DEFAULT 0, deaths_pvp INTEGER DEFAULT 0, deaths_planes INTEGER DEFAULT 0, deaths_helicopters INTEGER DEFAULT 0, deaths_ships INTEGER DEFAULT 0, deaths_sams INTEGER DEFAULT 0, deaths_ground INTEGER DEFAULT 0, takeoffs INTEGER DEFAULT 0, landings INTEGER DEFAULT 0, hop_on TEXT NOT NULL DEFAULT (datetime('now')), hop_off TEXT, PRIMARY KEY (mission_id, player_ucid, slot, hop_on));
CREATE INDEX IF NOT EXISTS "idx_statistics_player" ON "statistics" (player_ucid);
